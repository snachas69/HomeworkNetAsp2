// <auto-generated />
using HomeworkAspNet2Task2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeworkAspNet2Task2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HomeworkAspNet2Task2.Models.Shape", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShapeType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Shapes");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("HomeworkAspNet2Task2.Models.Circle", b =>
                {
                    b.HasBaseType("HomeworkAspNet2Task2.Models.Shape");

                    b.Property<int>("Radius")
                        .HasColumnType("int");

                    b.ToTable("Circles");
                });

            modelBuilder.Entity("HomeworkAspNet2Task2.Models.Rectangle", b =>
                {
                    b.HasBaseType("HomeworkAspNet2Task2.Models.Shape");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.ToTable("Rectangles");
                });

            modelBuilder.Entity("HomeworkAspNet2Task2.Models.Triangle", b =>
                {
                    b.HasBaseType("HomeworkAspNet2Task2.Models.Shape");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.Property<int>("Z")
                        .HasColumnType("int");

                    b.ToTable("Triangles");
                });

            modelBuilder.Entity("HomeworkAspNet2Task2.Models.Circle", b =>
                {
                    b.HasOne("HomeworkAspNet2Task2.Models.Shape", null)
                        .WithOne()
                        .HasForeignKey("HomeworkAspNet2Task2.Models.Circle", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HomeworkAspNet2Task2.Models.Rectangle", b =>
                {
                    b.HasOne("HomeworkAspNet2Task2.Models.Shape", null)
                        .WithOne()
                        .HasForeignKey("HomeworkAspNet2Task2.Models.Rectangle", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HomeworkAspNet2Task2.Models.Triangle", b =>
                {
                    b.HasOne("HomeworkAspNet2Task2.Models.Shape", null)
                        .WithOne()
                        .HasForeignKey("HomeworkAspNet2Task2.Models.Triangle", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
